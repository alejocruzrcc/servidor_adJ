<?xml version="1.0" encoding="UTF-8"?>

<sect1 id="modem-nulo">
  <title>Conexión con un módem nulo</title>

  <para> Para conectar una terminal a un sistema OpenBSD puede emplearse
    un módem nulo.  La terminal puede ser un computador con OpenBSD o con
    cualquier otro sistema operativo y un programa que permita ver la
    información que llegue a un puerto serial y enviar la que se teclee
    (por ejemplo sirven varios programas para comunicarse vía módem).
  </para>

  <sect2 id="modem-nulo-hardware">
    <title>Módem Nulo</title>
    <para>
	    Un módem nulo es un cable serial que tiene en sus extremos dos 
	    conectores hembra para puerto serial y que intercambia algunas 
	    conexiones. Si ambos conectores son de 25 pines, todos los cables 
	    deben estar sueltos excepto: 
      <itemizedlist>
	<listitem>
	  <para>(DSR) 6 &amp; (DCD) 8 -- 20,</para>
	</listitem>
	<listitem>
	  <para>(TxD) 2 -- 3,</para>
	</listitem>
	<listitem>
	  <para>(RxD) 3 -- 2, </para>
	</listitem>
	<listitem>
	  <para>(RTS) 4 -- 5,</para>
	</listitem>
	<listitem>
	  <para>(CTS) 5 -- 4,</para>
	</listitem>
	<listitem>
	  <para>(SG) 7 -- 7, </para>
	</listitem>
	<listitem>
	  <para>(DTR) 20 -- 6 &amp; 8.</para>
	</listitem>
      </itemizedlist>  

      En un conector de 9 pines la nomenclatura es: 
      1 DCD, 2 TxD, 3 RxD, 4 DTR, 5 SG, 6 DSR, 7 RTS y 8 CTS. 
    </para>
    <para>Un módem nulo mínimo sólo requiere que se conecten SG - SG
      (tierra), TxD - RxD (transmisión de uno con recepción del
      otro) y RxD - TxD.  Sin embargo para poder efectuar control
      de flujo también deben conectarse los demás.
    </para>
    <para>Aunque en el comercio es posible comprar un módem nulo, también es
      relativamente fácil ensamblar uno, una vez tenga conectores,  
      cable y cautín.  Si hace su propio módem nulo puede probar 
      que la conexión haya quedado bien empleando un ohmiometro.
    </para>
    <para>
      Una vez se conecte un módem nulo puede probarlo enviando mensajes
      por el puerto serial del uno y viendo lo que recibe en el otro. 
      Por ejemplo si conecta dos sistemas OpenBSD empleando en ambos
      el primer puerto serial, en uno de los dos puede ejecutar 
      (como usuario <literal>root</literal>)
<screen>
	cat &lt; /dev/cua00
</screen>
      mientras que en el otro ejecute
<screen>
	cat &gt; /dev/cua00
</screen>
      cuando escriba en el segundo y presione ENTER, en el primero recibirá
      el mensaje y líneas en blanco (<literal>cat</literal> no es el
      programa apropiado para establecer la comunicación, sólo para probar).
    </para>
  </sect2>
  <sect2 id="servidor">
    <title>Servidor</title>
    <para>Con un módem nulo conectado y funcionado puede configurarse
      un sistema OpenBSD como servidor para que permita conectar 
      terminales a un puerto serial.  Debe configurarse el 
      programa <command>init</command> para que durante el arranque ejecute un
      programa que reciba conexiones por el puerto serial (tal programa
      normalmente es <filename>getty</filename>).
    </para>
    <para>
      Basta editar el archivo <filename>/etc/ttys</filename>, quitar el 
      comentario a la línea apropiada para que quede:
<screen>
	tty00   "/usr/libexec/getty std.9600"   vt220 on secure
</screen>
      Después puede reiniciar el sistema o reiniciar <command>init</command>
      con: <command>kill -HUP 1</command>.
    </para>
    <para>
      En la línea modificada a <filename>/etc/ttys</filename>,
      <literal>tty00</literal> se refiere a
      <filename>/dev/tty00</filename> (i.e el dispositivo
      del primer puerto serial); <literal>/usr/libexec/getty std.9600</literal>
      es el comando por ejecutar al arranque para manejar ese 
      dispositivo<footnote><para>Como parámetro getty recibe
	  características de la línea que deben estar especificadas en
	  <filename>/etc/gettytab</filename>.  En este caso
	  <literal>std.9600</literal> especifica la velocidad de
	  transmisión. Empleando un módem nulo con control de flujo es 
	  posible emplear velocidades mayores hasta
	  <literal>std.115200</literal>.
      </para></footnote>;
      <literal>vt220</literal> indica el tipo de terminal que se conectará;
      <command>on</command> y <command>secure</command> son 
      banderas<footnote><para>banderas del inglés <emphasis>flags</emphasis>
      </para></footnote> para
      <command>init</command>, el primero indica que se esperan conexiones por
      esa línea tty y el segundo indica que puede iniciar conexiones el
      usuario root.
    </para>
  </sect2>

  <sect2 id="Terminal">
    <title>Terminal</title>
    <para>Una vez conectado su módem nulo a un servidor
      OpenBSD ya configurado para recibir conexiones por el puerto
      serial, puede conectar una terminal.</para>
    <para>Si la terminal cuenta con un sistema operativo, puede emplear 
      un programa de comunicaciones.  Con este debe poder ver los mensajes 
      de login del servidor.
      Desde ahí puede entrar como un usuario de ese sistema y trabajar
      como en una de las consolas virtuales (sin ambiente X).
    </para>
    <para>Si el computador que va a conectar es un sistema OpenBSD puede
      emplear el programa <command>tip</command> como usuario root:
<screen>
	tip tty0 
</screen>
      Es posible que tenga que intentar varias veces, si configura el
      servidor con una velocidad diferente puede especificarla por ejemplo
      con <command>tip -38400 tty0</command>
    </para>

    <para>
      <command>tip</command> empleará la descripción de <literal>tty0</literal>
      disponible en <filename>/etc/remote</filename> (que por defecto
      está configurado para representar el primer puerto serial).
      Le permitirá ver la información que el servidor envíe,
      enviar información al servidor y hacer algunas operaciones
      especiales comenzando con el carácter '~'. Por ejemplo terminar
      la sesión con '~.', enviar un archivo con '~p' o recibir un
      archivo con '~g'.
    </para>  
    <para>Dado que puede haber inconvenientes enviando o recibiendo
      archivos de 8 bits, los archivos (especialmente binarios) que envíe 
      o reciba con <command>tip</command> debe codificarlos antes con 
      <command>uuencode</command> y decodificarlos después de transmitidos
      con <command>uudecode</command>.  Para codificar un archivo
      <filename>prog.tgz</filename> y dejarlo codificado en
      <filename>prog.tgz.uue</filename>:
<screen>
	uuencode prog.tgz &lt; prog.tgz &gt; prog.tgz.uue
</screen>
      posteriormente para decodificarlo:
<screen>
	uudecode prog.tgz.uue
</screen>
    </para>
    <para>El inconveniente del método descrito es que <command>tip</command>
      no verifica la información transmitida. Una alternativa es
      emplear un protocolo como Zmodem.  Para eso instale tanto en cliente
      como en servidor el paquete <literal>zmtx-zmrx</literal>
      (o <literal>lrzsz</literal>).  Cuando desee transmitir
      un archivo del servidor al cliente, inicie la transmisión
      en el servidor: 
<screen>
	zmtx Mattich2.pdf
</screen>
      y en el cliente desde <command>tip</command> use
      <literal>~C zmrx</literal>.  Para enviar un archivo del cliente
      al servidor ejecute en el servidor:  <command>zmrx</command> y
      después desde <command>tip</command> use:
      <literal>~C zmtx miarchivo.txt</literal>
    </para>
  </sect2>
  <sect2 id="ppp-sobre-modem-nulo">
    <title>PPP sobre Módem Nulo</title>
    <para>Una vez esté conectado un cliente con un servidor OpenBSD,
	    es posible emplear el protocolo PPP<footnote><para>PPP es un protocolo especificado en el RFC 1661.</para></footnote> 
	    para permitirle al computador
      cliente acceder a Internet o a la red a la que esté conectado
      el servidor.
    </para>

    <para>Una forma posible para lograr conectividad a Internet en una
	    Intranet es asignando una dirección
      estática de la red al cliente y empleando el servidor para
      que actúe como proxy a nivel ARP.</para>
    <para>En el servidor asegúrese de tener en el archivo
	<filename>/etc/ppp/ppp.conf</filename>:

<screen>
	default:
	  set log Phase Chat LCP IPCP CCP tun command
	  set device /dev/cua00
	  set speed 115200
	  set ctsrts on
	  set dial ""
	
	modemnulo:
	  set timeout 0
	  set lqrperiod 10
	  enable proxy
	  enable lqr
	  accept lqr
	  allow users SuLogin
</screen>

       Remplazando <literal>SuLogin</literal>, <literal>SuClave</literal>
       y las direcciones de red por las apropiadas.
       Por su parte el archivo <filename>/etc/ppp/ppp.conf</filename>
       del cliente debe contener:
<screen>
	default:
	 set log Phase Chat LCP IPCP CCP tun command
	 set device /dev/cua00
	 set speed 115200
	 set ctsrts on
	 set dial ""
	
	modemnulo:
	  set dial ""
	  set authkey SuClave
	  set login "TIMEOUT 3 ogin:-\\r-login: SuLogin word: \\P $ ppp\\s\\-direct\\smodemnulo\\r"
	  set lqrperiod 10
	  set timeout 0
	  set ifaddr 192.168.16.20 192.168.16.131
	  add default HISADDR
	  enable lqr
	  accept lqr
	  enable dns
</screen>

       Después pude iniciar la comunicación desde el cliente con:
<screen>
	ppp -ddial modemnulo
</screen>

     </para>
  </sect2>
  <sect2 id="referencias-modem-nulo">
    <title>Referencias y lecturas recomendadas</title>

    <para>
      Puede consultar más sobre la conexión física de un módem nulo
      en <citation><link
	  linkend="CablesModemNulo">CablesModemNulo</link></citation>.
      Puede consultar sobre comunicaciones seriales en FreeBSD (similar
      a OpenBSD) en el capítulo "Serial Communications" de
      <citation><link linkend="FreeBSDHandbook">FreeBSDHandbook</link></citation>
      Para emplear un sistema OpenBSD mínimo como consola de algunos
      eventos de un servidor OpenBSD puede consultar 
      <citation><link
	  linkend="SerialOpenBSD">SerialOpenBSD</link></citation>.
      La configuración del servidor OpenBSD que le permite atender
      conexiones por el puerto serial puede verse en las siguientes
      páginas man:
      <citerefentry><refentrytitle>init</refentrytitle>
	<manvolnum>8</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>ttys</refentrytitle>
	<manvolnum>5</manvolnum></citerefentry> y
      <citerefentry><refentrytitle>getty</refentrytitle>
	<manvolnum>8</manvolnum></citerefentry>.
      La configuración de un cliente OpenBSD para funcionar como
      consola puede consultarse en:
      <citerefentry><refentrytitle>tip</refentrytitle>
	<manvolnum>1</manvolnum></citerefentry> y
      <citerefentry><refentrytitle>remote</refentrytitle>
	<manvolnum>5</manvolnum></citerefentry>.
      Para conocer más sobre PPP puede consultarse
      el <ulink url="ftp://ftp.rfc-editor.org/in-notes/rfc1661.txt">RFC
	1661</ulink>, la implementación particular de el protocolo
      de usuario en OpenBSD en la página del manual.  El archivo
      de configuración por defecto también cuenta con comentarios
      que ayudan.
    </para>
  </sect2>
</sect1>
