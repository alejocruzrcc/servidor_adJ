<?xml version="1.0" encoding="UTF-8"?>

<sect1 id="mariadb">
	<title>MariaDB</title>
	<para>A partir de OpenBSD/adJ 5.7 MariaDB remplaza a MySQL.  Según 
		<ulink url="https://es.wikipedia.org/wiki/MariaDB">https://es.wikipedia.org/wiki/MariaDB</ulink> MariaDB fue
		iniciada por el fundador de MySQL después de que Oracle 
		compró Sun y MySQL, pues consideraba que Oracle había
		hecho la compra para reducir competencia de sus bases 
		de datos.</para>
  <para>Debe instalar los paquetes &p-mariadb-client; y
	  &p-mariadb-server;. Aunque el nombre de los paquetes cambia
	  los comandos para operarla siguen siendo los mismos.
	  Tras instalar el servidor debe
      ejecutar <command>mysql_install_db</command>.  
  </para>
  <para>
      Inicialice el directorio donde estarán las bases de datos con
      <screen>
sudo /usr/local/bin/mysql_install_db
      </screen>
</para>
  <para>
    Después agregue a <filename>/etc/login.conf</filename>:
    <screen>
mysql:\
	:openfiles-cur=2048:\
	:openfiles-max=4096:\
	:tc=daemon:
</screen>
que creará una clase de login ---tenga en cuenta no dejar espacios al 
final de cada línea y que desde la segundan comiencen con el caracter
tabulador. A continuación regenere el archivo binario  
<filename>/etc/login.conf.db</filename> con
<screen>
cd /etc
sudo cap_mkdb /etc/login.conf 
</screen>
A continuación agregue <literal>mysqld</literal> a 
<literal>pkg_scripts</literal> en <filename>/etc/rc.conf.local</filename>.
A continuación lance el servidor con:
<screen>
	sudo sh /etc/rc.d/mysqld start
</screen>
Los errores quedarán en <filename>/var/mysql/<replaceable>host</replaceable>.err</filename>.
</para>
<para>
    Después puede establecer una clave para el usuario
    <literal>root</literal> de MariaDB cuando ingresa desde
    <literal>localhost</literal> con:
    <screen>
/usr/local/bin/mysqladmin -u root  password 'nueva-clave' 
/usr/local/bin/mysqladmin -u root -pnueva-clave -h &ESERV; password 'nueva-clave'
    </screen>
    Después puede iniciar una sesión, crear bases de datos, crear usuarios
    y otorgarles privilegios.
    </para>
   <para>Para apagar el servidor mysql:
    <screen>
mysqladmin -u root -p shutdown
    </screen>
  </para>
 
 <para>Si desea usar <application>mysql</application> con
    <application>php</application>, instale además de los paquetes
    básicos de php
    (<filename>php-core-<replaceable>v</replaceable></filename> y
    <filename>php-mysql-<replaceable>v</replaceable></filename>)
  </para>
   
  <sect2 id="uso-mariadb">
    <title>Uso básico</title>
    <para>
    <screen>
mysql -u root -p 
    </screen>
    puede crear la base de datos <literal>datos</literal>, y un
    usuario <literal>erfurt</literal> que la pueda administrar (i.e
		    con todos los privilegios excepto GRANT) y con clave
    <literal>vsewf</literal> usando:
    <screen>
CREATE DATABASE datos;
GRANT ALL PRIVILEGES ON datos.* TO erfurt@localhost IDENTIFIED BY 'vsewf';
    </screen>
    </para>
    <para>
    Algunas operaciones usuales del administrador son:
    <screen>
SHOW DATABASES;
    </screen>
    que muestra todas las bases disponibles.
    <screen>
USE base1;
    </screen>
    que permite usar la base base1.
    <screen>
SHOW TABLES;
    </screen>
    que muestra todas las tablas de la base activa.
    <screen>
DESCRIBE tabla;
SHOW CREATE TABLE tabla;
    </screen>
    que presentan estructura de la tabla.

    </para>
    </sect2>
    
  <sect2 id="clave-mysql">
	  <title>Cambio de la clave de administrador</title>
  <para>Si olvida la clave de root después de haberla establecido 
    puede cambiarla entrando a la cuenta de administrador:
    <itemizedlist>
      <listitem>
	<para>Detenga el servidor.</para>
      </listitem>
      <listitem>
	<para>Inicie el servidor con 
		<command>/usr/local/libexec/mysqld --user=root --skip-grant-tables</command></para>
      </listitem>
      <listitem>
	<para>Ejecute:
	  <screen>
# mysql
mysql> use mysql
mysql> update user set password=password('supercosa') where user='root';
mysql> flush privileges;
mysql> exit
	</screen></para>
      </listitem>
      <listitem>
	<para>Vuelva a apagar el servidor y reinicielo con:
	  <command>/usr/local/bin/mysqld_safe &amp;</command>
	</para>
      </listitem>
    </itemizedlist>
  </para>
  </sect2>

 
  <sect2 id="recuperacion-backups">
	  <title>Recuperación y backups</title>
	  <para>
	  MariaDB mantiene bases de datos en directorios y las tablas 
	  en archivos.  No es recomendable que modifique tales archivos,
	  al menos no, mientras el servidor esté activo.  
  </para>
  <para>
	  Para sacar una copia de respaldo de todas las bases de datos con:
	  <screen>
# mysqldump --force -p --all-databases > /respaldomysql/dump-1nov2007.sql
	  </screen>
	  y posteriormente restaurarla con:
	  <screen>
# mysql &lt; /respaldomysql/dump-1nov2007.sql
	  </screen>
  </para>
  </sect2>
  <sect2 id="chroot-mysql">
	  <title>MariaDB y servidor web con chroot</title>
	  <para>Puede emplear aplicaciones para Apache en modo
		  <literal>chroot</literal> que usen bases de datos 
		  MariaDB de tres formas:
		  (1) Conectándose a un puerto TCP/IP donde responda
		  MariaDB, (2) poniendo el socket de MariaDB en un directorio
		  dentro de la jaula del servidor web o (3) Corriendo MariaDB 
		  denro de la jaula
		  <literal>chroot</literal>.  </para>
	  <para>
		  A continuación documentamos como 
		  ubicar el socket de MariaDB dentro de la jaula
		  del servidor web (/var/www/).
	  </para>
		  <para>
			  Una vez instale <literal>maria-server</literal> 
			  cree el directorio en el cual ubicará
			  el socket, digamos:
			  <screen>
mkdir -p /var/www/var/run/mysql/
chown _mysql:_mysql /var/www/var/run/mysql/
chmod a+w /var/www/var/run/mysql/
chmod +t /var/www/var/run/mysql/
			  </screen>
			  y después inicie MariaDB indicando la ruta del
			  socket con la opción <literal>--socket</literal>,
			  por ejemplo para que el cambio se efectúe en
			  cada inicio, edite 
			  <filename>/etc/rc.conf.local</filename> para
			  agregar:
<screen>
mysqld_flags="--socket=/var/www/var/run/mysql/mysql.sock"
</screen>
e inicie desde <filename>/etc/rc.local</filename>
con:
<screen>
pgrep mysqld > /dev/null
if [ "$?" != 0  -a X"${mysqld_flags}" != X"NO" -a \
	-x /usr/local/bin/mysqld_safe ]; then
	echo -n ' mysqld ' 
	/usr/local/bin/mysqld_safe ${mysqld_flags} &amp;
fi
</screen>

Sus aplicaciones PHP pueden entonces conectarse con:
<screen>
$dbhost  = "localhost";
$dbuname = "miusuario";
$dbpass  = "miclave";
mysql_connect($dbhost, $dbuname, $dbpass);
</screen>
</para>
<para>Tenga en cuenta también que otros binarios de MariaDB también requerirán
	la opción <literal>--socket=/var/www/var/run/mysql/mysql.sock</literal>
	al ejecutarse por ejemplo:
	<screen>
# mysqldump --socket=/var/www/var/run/mysql/mysql.sock  
		\-p --all-databases
	</screen>
		  </para>
  </sect2>


  <sect2 id="lecutras-mysql">
	  <title>Lecturas recomendadas</title>
  <para>
    Referencias:
    <itemizedlist>
      <listitem>
	<para>Una explicación de algo de la instalación y el uso de 
	  MySQL en OpenBSD: 
	  <ulink
	    url="http://www.sancho2k.net/filemgmt_data/files/mysql_notes.html"></ulink>
	</para>
      </listitem>
      <listitem>
	<para>La documentación de MariaDB : 
	  <ulink
	  url="https://mariadb.com/kb/en/mariadb/documentation/"></ulink>
	</para>
      </listitem>
      <listitem>
	<para>Ayuda para cambiar clave de root en sistemas Linux:
	  <ulink url="http://www.netadmintools.com/art90.html"></ulink>
	</para>
      </listitem>
    </itemizedlist>

  </para>

  </sect2>
</sect1>
