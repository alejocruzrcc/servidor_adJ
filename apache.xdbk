            <sect2 id="apache">
	      <title>Apache</title>
	      <para>adJ y OpenBSD cuentan con el porte de
		      transición <literal>apache-httpd-openbsd</literal>
		      con el Apache 1.3.29 modificado que había en 
		      adJ/OpenBSD 5.5.   Este porte será descontinuado
		      por lo que es importante usarlo como porte de
		      transito bien a OpenBSD httpd o a nginx o a
		      Apache2.
</para>
<para>
Instale el paquete:
<screen>
	doas pkg_add apache-httpd-openbsd
</screen>

En el archivo <literal>etc/rc.conf.local</literal>  haga los siguientes cambios (parcialmente explicados en {2}):
# Renombre <literal>httpd_flags</literal> por <literal>apache_flags</literal>
# En la variable <literal>pkg_scripts</literal> remplace <literal>httpd</literal> por <literal>apache</literal> (y  de requerirse saque <literal>nginx</literal>).

</para>
<para>
Modifique el archivo de configuración <literal>/var/www/conf/httpd.conf</literal>, 
el cambio evidente es modificar la ruta de los módulos activos para que 
sean cargados de <literal>/usr/local/lib/apache/</literal> en 
lugar de <literal>/usr/lib/apache</literal>
</para>
<para>
Puede probar reiniciar el servidor completo para asegurar que el Apache 1.3.29 arranca también, o bien iniciar sólo el servicio con:
<screen>
	doas sh /etc/rc.d/apache start
</screen>
</para>

<para>
Este porte corre por defecto y
	para mayor seguridad con <command>chroot</command> en 
	<filename>/var/www</filename>.  Es decir que desde el punto
	de vista de Apache la raíz del sistema es lo que hay en
	<filename>/var/www</filename>.  Diversos portes o sus aplicaciones
	pueden requerir que Apache tenga acceso a otras partes del sistema,
	aunque no lo recomendamos puede lograrlo iniciando con el flag:
	<screen>
	apache_flags="-u" </screen>
      </para>
      <para>Para detener el servidor una vez esté corriendo puede emplear:
<screen>
	doas /etc/rc.d/apache stop
</screen>
Para iniciarlo o reiniciarlo con las opciones que haya configurado
en <filename>/etc/rc.conf.local</filename>:
	<screen>
	doas /etc/rc.d/apache restart
	</screen>
</para>

      <sect3 id="directorios-usuarios">
	<title>Directorios para usuarios</title>
      <para>El archivo de configuración por defecto
	(<filename>/var/www/conf/httpd.conf</filename>) no incluye 
	directorios para usuarios. A partir de OpenBSD 3.4 se recomienda 
	que estos directorios se creen en <filename>/var/www/users</filename>, 
	los activa estableciendo en el archivo de configuración:<screen>
	UserDir /users </screen>
	o bien<screen>
	UserDir /var/www/users </screen>
	el primer en caso de que corra Apache chroot y el segundo si no.
	En ambos casos se sugiere la siguiente secuencia para crear
	un directorio de publicación para el usuario &EUSUARIO;:
	<screen>
	cd /home/&EUSUARIO;
	doas mkdir /var/www/users/&EUSUARIO;
	doas ln -s /var/www/users/&EUSUARIO; public_html
	doas chown &EUSUARIO;:&EUSUARIO; /var/www/users/&EUSUARIO;
	</screen>

	Así el usuario podrá publicar sus archivos en su subdirectorio
	<filename>public_html</filename> (como ocurre clásicamente) y
	desde un navegador local podrán verse con el URL:
	<literal>http://localhost/~&EUSUARIO;/</literal> o remotamente
	con <literal>http://www.&EDOMINIO;/~&EUSUARIO;/</literal>
      </para>
      </sect3>

      <sect3 id="dominios-virtuales">
	<title>Dominios virtuales</title>
	<para>Empleado dominios virtuales (del inglés
	  <foreignphrase>Virtual Hosting</foreignphrase>) es posible
	  manejar con un mismo servidor diversas direcciones DNS.  Para
	  activarlo:
	  <orderedlist>
	    <listitem>
	      <para>En <filename>/var/www/conf/httpd.conf</filename> no 
		emplee un alias para el directorio
		<filename>/</filename></para>
	    </listitem>
	    <listitem>
	      <para>Si ejecuta Apache con <command>chroot</command> copie
		      <filename>/usr/local/lib/apache/modules/mod_vhost_alias.so</filename>
		      en <filename>/var/www/usr/local/lib/apache/modules/</filename></para>
	    </listitem>
	    <listitem>
	      <para>Agregue en <filename>/var/www/conf/httpd.conf</filename>
		una línea del estilo:
		<screen>
	NameVirtualHost 65.167.3.4
		</screen>
		remplazando la IP por la de su servidor
	      </para>
	      <para>Agregue un dominio virtual por cada dominio que maneje,
		por ejemplo:
		<screen>
	&lt;VirtualHost 65.167.63.234&gt;
	    ServerAdmin &EUSUARIO;@&EDOMINIO;
	    DocumentRoot /var/www/htdocs
	    ServerName www.&EDOMINIO;
	    ServerAlias &EDOMINIO;
	    ErrorLog logs/&EDOMINIO;-error_log
	    Options ExecCgi Includes MultiViews Indexes FollowSymlinks 
	    SymLinksIfOwnerMatch
	    CustomLog logs/&EDOMINIO;-access_log common
	&lt;/VirtualHost&gt;
		</screen>
	      </para>
	    </listitem>
	</orderedlist>
      </para>
    </sect3>

      <sect3 id="ssl">
	<title>SSL</title>
<para>

Para emplear SSL con Apache pueden seguirse las instrucciones 
del FAQ de OpenBSD que se retoman a continuación.  Debe generar
un certificado que pueda ser firmado por una Autoridad Certificadora
o por usted mismo.

<screen>
	doas openssl genrsa -out /etc/ssl/private/server.key 1024
	doas openssl req -new -key /etc/ssl/private/server.key \
	       -out /etc/ssl/private/server.csr
</screen>

Tras el segundo paso debe ingresar el código del país (co para Colombia),
el departamento en el que está, la organización, la unidad dentro
de la organización y el nombre común (e.g la dirección web).  
</para>
<para>Después puede enviar el archivo 
<filename>/etc/ssl/private/server.csr</filename>
a una entidad certificadora, la entidad certificadora la 
devolverá su certificado firmado (digamos <filename>sudominio.pem</filename>) 
el cual debe ubicar en <filename>/etc/ssl/server.crt</filename>.
Si prefiere firmar usted mismo su certificado emplee:
<screen>
	doas openssl x509 -req -days 3650 -in /etc/ssl/private/server.csr \
		-signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt
</screen>
</para>

<para>
A continuación puede
<itemizedlist>
	<listitem>
		<para>agregar entre las opciones de Apache 
			<option>-DSSL</option> en 
			<filename>/etc/rc.conf.local</filename></para>
	</listitem>
	<listitem>
		<para>modificar 
<filename>/var/www/conf/httpd.conf</filename> para que al usar SSL se
redireccione al directorio apropiado (digamos 
<filename>/var/www/users/sivel/</filename>), i.e. remplazando algunas
líneas de la sección <literal>&lt;VirtualHost _default_:443&gt;</literal>:
<screen>
	DocumentRoot /var/www/users/sivel
	ServerName miServidor
	ServerAdmin micorreo@midominio.org
	ErrorLog logs/error_log
	TransferLog logs/access_log
</screen>
		</para>
	</listitem>
	<listitem>
		<para> Reiniciar el servidor con 
las opciones apropiadas, por ejemplo:
<screen>
	doas /etc/rc.d/apache restart
</screen>
		</para>
	</listitem>
</itemizedlist>
Finalmente puede probar abriendo desde un navegador
<literal>https://&ESERV;</literal>
</para>
      </sect3>


      <sect3 id="php">
	<title>PHP</title>

	<para>Instale el paquete
		<literal>&p-php;</literal>.
	  Después cree un enlace para activarlo en servidor web:
	  <screen>
	doas ln -s /var/www/conf/modules.sample/php-5.4.conf \
		/var/www/conf/modules/php.conf
	  </screen>
	  y asegúrese de que las siguientes líneas estén en
	  <filename>/var/www/conf/httpd.conf</filename>:
	  <screen>
	LoadModule php5_module /usr/local/lib/apache/modules/libphp5.so

	AddType application/x-httpd-php .php

	DirectoryIndex index.html index.php
	  </screen>
	  Reinicie Apache  y pruebe la instalación de PHP por ejemplo
	  cargando desde un navegador un archivo <filename>prueba.php</filename>
	  el cual debe tener el siguiente contenido:
	  <screen>
	&lt;?php
	  phpinfo();
	?&gt;
	  </screen>
	</para>
	<sect4 id="php-postgresql">
	  <title>Soporte para PostgreSQL en PHP</title>
	  <para>Para activar el soporte para PostgreSQL (ver <xref
	      linkend="postgresql"></xref>en PHP
      instale el paquete <literal>&p-php-pgsql;</literal> y
      ejecute:
	<screen>
	doas ln -fs /etc/php-5.4.sample/pgsql.ini \
		/etc/php-5.4/pgsql.ini
	</screen>
	    Puede comprobar que esta extensión funciona revisando
	    la salida de la función <literal>phpinfo()</literal>.
	</para>
	</sect4>

	<sect4 id="lecturas-php">
	  <title>Lecturas recomendadas</title>
	  <para>Puede aprender sobre PHP en 
	    <ulink url="http://www.php.net"></ulink></para>
	  <para>La configuración de PHP con PostgreSQL y Apache corriendo 
	    con chroot puede verse en
	    <ulink
		    url="http://www.bsdforen.org/foren/showtopic.php?threadid=773"></ulink> o en la sección sobre PostgreSQL 
    de estas guías (ver <xref linkend="postgresql"></xref>
    </para>
	</sect4>
      </sect3>

      <!--      <sect3 id="tomcat">
	<title>Tomcat</title>
	<para><command>Tomcat</command> es una implementación
	  de estándares de Sun para soportar servlets (como CGIs escritos
	  en Java) y JSP (para generar contenido dinámico al estilo de
	  PHP pero programando en Java).</para>

	<para>Para emplear la versión 4.x de tomcat, instale primero
	  el paquete <literal>&p-jdk-linux;</literal> y después el paquete
	  <literal>jakarta-tomcat</literal>, sugerimos que después,
	  si no existe, cree un usuario
	  <literal>_tomcat</literal> en el grupo
	  <literal>_tomcat</literal> y que sea dueño de los archivos 
	  en <filename>/var/tomcat</filename>:
	  <screen>
	doas chown -R _tomcat:_tomcat /var/tomcat
	  </screen>

	  Después ejecute:
	  <screen>
	JAVA_HOME=/usr/local/jdk1.3.1-linux/ \
	  /usr/local/jakarta-tomcat-4.0.6/bin/startup.sh
	  </screen>
	  Si desea que Tomcat inicie cada vez que arranque el sistema
	  agregue las siguientes líneas a
	  <filename>/etc/rc.local</filename>:
	  <screen>
	if [ -x /usr/local/jakarta-tomcat-4.0.6/bin/startup.sh ]; then
	  JAVA_HOME=/usr/local/jdk1.3.1-linux/ \
	  jakarta-tomcat-4.0.6/bin/startup.sh
	  echo -n 'tomcat'
	fi
	  </screen>
	  y para que sea apagado cada vez que se apaga el computador, agregue
	  en <filename>/etc/rc.shutdown</filename>:
	  <screen>
	if [ -x /usr/local/jakarta-tomcat-4.0.6/bin/shutdown.sh ]; then
	  JAVA_HOME=/usr/local/jdk1.3.1-linux/ \
	    jakarta-tomcat-4.0.6/bin/shutdown.sh
	fi
	  </screen>
	</para>
	<para>La configuración por defecto (modificable en
	  <filename>/etc/tomcat/server.xml</filename>) le permite
	  ver contenidos en el puerto 8080, siendo $CATALINA_HOME
	  <filename>/var/tomcat</filename>.  Si requiere instalar una
	  aplicación en formato .war, agreguela en
	  <filename>/var/tomcat/webapps</filename> y reinicie
	  Tomcat.</para>
	<para>Si una aplicación produce gráficas usando
	  clases <literal>awt.*</literal>, durante el arranque de
	 Tomcat deberá ejecutar el servidor virtual 
	  <command>/usr/X11R6/bin/Xvfb</command>, puede hacerlo
	  modificando el script
	  <filename>/usr/local/jakarta-tomcat-4.0.6/bin/catalina.sh</filename>.
	  Agregue al comienzo:
	  <screen>
	export DISPLAY=:1	    
	  </screen>
	  Al comienzo de la sección de la opción <literal>start</literal> 
	  agregue:
	  <screen>
	/usr/X11R6/bin/Xvfb :1 &amp;
	  </screen>
	  y en la sección <literal>stop</literal> ejecute:
	  <screen>
	pkill -9 Xvfb
	  </screen>
	</para>
	<para>Las bitácoras quedan en
	  <filename>/var/tomcat/logs</filename>.
	</para>
	<sect4 id="lecturas-tomcat">
	  <title>Lecturas recomendadas</title>
	  <para>Puede aprender sobre Jakarta-Tomcat en 
	    <ulink url="http://jakarta.apache.org/tomcat/index.html"></ulink></para>
	  <para>La configuración de <command>Xvfb</command> puede verse en
	    <ulink
	      url="http://www.javasource.org/GifServlet/linux.html"></ulink>
	  </para>
	</sect4>


</sect3> -->

      <sect3 id="ssi">
	<title>Server Side Include</title>
	<para>El Apache incluido en OpenBSD tiene compilado como módulo
		estático <literal>mod_include.c</literal> (como
		puede comprobarse ejecutando 
		<command>/usr/sbin/httpd -l</command>).  Por esto para
		activar SSI basta quitar los comentarios de las siguientes
		líneas en <filename>/var/www/conf/httpd.conf</filename>:
		<screen>
	AddType text/html .shtml
	AddHandler server-parsed .shtml
		</screen>

		y en el directorio o directorios desde los que se quieren
		usar páginas con SSI (extensión <filename>.shtml</filename>), 
		agregar entre las opciones:
		<screen>
	Option Includes
		</screen>
		Si se desea que las páginas con extensión
		<filename>.html</filename> sean reconocidas por el servidor,
		de forma que puedan incluir directivas SSI, deles permiso
		de ejecución y agregué después del <literal>AddHandler</literal>
		antes mencionado:
		<screen>
	XBitHack on
		</screen>
	</para>

	<para>Tras reiniciar apache puede probar creando una página
		<filename>prueba.shtml</filename> por ejemplo con:
		<screen>
	<![CDATA[<html>
		<head><title></title></head>
		<body>
			<!--#echo var="DATE_LOCAL" -->
		</body>
	</html> ]]>
		</screen>
	Al abrirla debe presentar la fecha y hora del sistema.

	</para>


	<sect4 id="lecturas-ssi">
	  <title>Lecturas recomendadas</title>
	  <para>Hay información completa sobre SSI en el manual de
		  Apache
		  <ulink url="http://httpd.apache.org/docs/howto/ssi.html"></ulink>
	  </para>
	</sect4>

	<!--
	<sect4 id="webalizer">
		<title>webalizer</title>
		<para>Instalar paquete webalizer, modificar configuración
			de Apache:
			CustomLog logs/access_log combine
			/var/www/htdocs/estad/rotate_logs
			crontab -e
			0       0       1       *       *       /var/www/htdocs/estad/rotate_logs
			20      0       1       *       *       /usr/local/bin/webalizer -Q /var/lib/htt
			pd/logs/access_log.backup

			cp /usr/local/share/examples/webalizer/sample.conf /etc/webalizer.conf
			vi 
			OutputDir /var/www/htdocs/estad
TopUsers        0			
		</para>
	</sect4>

	-->

</sect3>
<!-- <sect3 id="squid">
	<title>Proxy Cache Squid</title>
	<para>
		P
		Si era en squid.conf, mire que allí hay varias instrucciones que
		comienzan por acl .., agregué lo necesario debajo de esas.

		La parte de http_access también es en squid.conf y también agregue

		lo necesario a continuación de las reglas básicas (donde dice "INSERT
		YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENT").

		Todo quedó dependiendo de 4 archivos de configuración:

		1. /etc/squid/ips-abiertas es lista de IPs que no requieren censura
		por parte de squid y que si tienen acceso al web
		2. /etc/squid/ips-restringidas es lista de IPs que tienen acceso al
		web con posible censura de squid

		Las ips que no estén en los dos anteriores no tendrían acceso al web.

		3. /etc/squid/urls-denegados es lista de urls que no son permitidos
		(en realidad son expresiones regulares si parte de un URL cumple con
		una de estas será denegado).
		4. /etc/squid/urls-permitidos es lista de urls que se permiten de forma
		explicita, para evitar que fueran denegados por urls-denegados

		Todo url que no esté en urls-denegados es permitido.

	</para>
	<xyz></xyz-corregir-anterior>
</sect3> -->

      </sect2>
