<?xml version="1.0" encoding="UTF-8"?>

<sect1 id="postgresql">
  <title>Motor de bases de datos PostgreSQL</title>
  <para> PostgreSQL es un motor de bases de datos relacionales (RDBMS) que
	  verifica integridad referencial con gran funcionalidad como
	  base de datos, aunque un poco más lenta que otros motores. Su
	  licencia es tipo BSD.  En esta sección describimos brevemente 
	  la instalación y uso en un sistema adJ.
</para>
  <sect2 id="primera-instalacion">
    <title>Primera instalación del servidor</title>
    <para>Este motor de bases de datos se instala con el archivo
	    de ordenes
	    <filename>/inst-adJ.sh</filename> que en instalaciones
	    tipicas de adJ basta ejecutar y volver a ejecutar para
	    actualizar o para volver a inicializar PostgreSQL u otro
	    paquete de esta distribución. En caso de actualizar este
	    archivo sacará respaldo de la información de la base de 2
	    formas (copiando directorios de PostgreSQL y sacando
	    un volcado de toda la base).</para>
    <para>A continuación se dan detalles del proceso de instalación y
	    uso de PostgreSQL en caso de que requiera instalar por
	    su cuenta o aprender más sobre este motor de bases de datos.</para>

    <para>Para emplearlo por primera vez instale el paquete
    <literal>&p-postgresql-server;</literal> (también es recomendable 
    <literal>postgresql-docs</literal>).</para>
  <para>Este paquete deja instrucciones específicas para
    inicializar la base de datos, permitir conexiones de
    red e inicializar la base de datos cada vez que
    arranque el sistema en:
    <filename>/usr/local/share/doc/postgresql/README.OpenBSD</filename>.
    Los pasos que este escrito describe son:
    <itemizedlist>
      <listitem>
	      <para>Opcional. El paquete de PostgreSQL disponible 
		      crea el usuario del sistema
		      <literal>_postgresql</literal>, sin embargo si está
		      actualizando o lo requiere puede crearlo con:
	  <screen>
# useradd -c "Administrador de PostgreSQL" -g =uid -m -d /var/postgresql \
  -s /bin/sh -u 503 _postgresql 
# passwd _postgresql
	  </screen> 
	</para>
	</listitem>
	<listitem>
		<para>A diferencia de versiones anteriores, este paquete ya no
			inicializa la base.  Inicialicela con:
			<screen>
# mkdir -p /var/postgresql/data
# chown -R _postgresql:_postgresql /var/postgresql
# su - _postgresql
$ initdb -D /var/postgresql/data -Upostgres --encoding=ISO8859-1
	    </screen>
	    En adJ se
	    emplea por defecto autenticación md5, que requiere suministrar
	    clave cada vez que se carga la interfaz <literal>psql</literal>
	    o abre conexiones.     Si no desea autenticación md5, al
	   inicializar la base con <command>initdb</command> emplee la opción 
	    <option>--auth=trust</option>.  Una vez inicializada puede 
	    cambiar de un método a otro en el archivo
	    <filename>/var/postgresql/data/pg_hba.conf</filename>
	  </para>
  </listitem>
  <listitem>
	  <para>Altamente Recomendado.  Agregue a 
		  <filename>/etc/sysctl.conf</filename>:
		  <screen>
kern.seminfo.semmni=256
kern.seminfo.semmns=2048
kern.shminfo.shmmax=50331648
		  </screen>
	  </para>
  </listitem>
	<listitem>
	  <para>Configurar servicio 
		  para que inicie en el arranque y 
		  se detenga al apagar.
		  En <filename>/etc/rc.conf.local</filename> agregue: <screen>
pg_ctl_flags="start \
	-D /var/postgresql/data -l /var/postgresql/logfile \
	-o '-D /var/postgresql/data'"
</screen>
y en el mismo archivo en la línea donde se define 
<literal>pkg_scripts</literal> agregue postgresql, así un
computador donde estén configuradas las particiones cifradas,
respaldo cifrado y los servicios httpd, cupsd dirá:
<screen>
pkg_scripts="cron montaencres montaencpos postgresql httpd cupsd"
</screen>
	  </para>
	</listitem>
    </itemizedlist>

    Inicialmente el servidor queda configurado 
    con sockets Unix (solo desde la misma máquina).  
    Puede comprobar que está corriendo el servidor (postmaster) con:
    <screen>
# pgrep post
    </screen>
    y revisar el socket examinando la presencia del archivo
    <filename>/var/www/tmp/.s.PGSQL.5432</filename> (otra
    ubicación puede ser <filename>/tmp/.s.PGSQL.5432</filename>).
    </para>

    <para>Para emplear el protocolo TCP/IP para conexiones desde 
	    algunas máquinas de su elección, 
	    edite <filename>/var/postgresql/data/pg_hba.conf</filename>
    y agregue por ejemplo máquinas y usuarios que puedan hacer
    conexiones.  También edite 
    <filename>/var/postgresql/data/postgresql.conf</filename> para
    que incluya líneas de configuración como:<screen>
max_connections = 100
port = 5432
    </screen>
  </para>
  <para>
    Para mejorar desempeño especialmente en sitios que atiendan 
    bastantes conexiones simultáneamente, consulte primero
    <filename>/usr/local/share/doc/postgresql/README.OpenBSD</filename>.
  </para>
  <para>
	  En adJ por seguridad (e.g cuando ejecuta Apache con 
	  <command>chroot</command> en 
	  <filename>/var/www</filename>)
	  no se permiten conexiones TCP/IP y se emplea una ruta 
	  para los sockets diferente a la ruta por defecto (i.e 
	  <filename>/tmp</filename>), se trata de
	  <filename>/var/www/tmp</filename>, que se define en
	  el archivo de configuración de PostgreSQL con:
<screen>
unix_socket_directory = '/var/www/tmp'
</screen>
   Antes de reiniciar PostgreSQL asegúrese
    de crear el directorio:
    <screen>
# mkdir	/var/www/tmp
# chmod a+w /var/www/tmp
# chmod +t /var/www/tmp
    </screen> 
    También tenga en cuenta que las diversas herramientas reciben como
    parámetro adicional <option>-h <replaceable>ruta</replaceable></option>.
    Por ejemplo si ejecuta Apache con <command>chroot</command> en 
    <filename>/var/www/</filename>
    puede tener configurado su directorio para sockets en 
    <filename>/var/www/tmp</filename>, en ese caso puede iniciar 
    <command>psql</command> con la base <literal>prueba</literal> usando:
<screen>
psql -h /var/www/tmp prueba
</screen>
  </para>
  <para>En paquetes anteriores al de adJ 4.1 el superusuario de la base 
	coincidía con el usuario del sistema <literal>_postgresql</literal>,
	desde 4.1 el superusuario de la base es <literal>postgres</literal>,
	así que para realizar operaciones  debe agregarse la opción
	<option>-U postgres</option>.  
	El instalador de adJ seleccionará una clave con el programa
	<command>apg</command> y la dejará en
	el archivo <filename>/var/postgresql/.pgpass</filename> en
	una línea de la forma:
	<screen>
*:*:*:postgres:clave
	</screen>
	De esta manera desde la cuenta <literal>_postgresql</literal>
	no necesitará dar la clave del usuario <literal>postgres</literal>.
</para>

  </sect2>

  <sect2 id="autenticacion">
	  <title>Habilitando autenticación</title>
	  <para>Por defecto la forma de inicializar PostgreSQL no establecerá
		  una clave de administrador ni exigirá
		  autenticación para cuentas que se conecten desde la misma
		  máquina.  Sin embargo esto debe mejorarse si tiene varias 
		  cuentas en el mismo servidor.</para>
	  <para>Una manera es en el momento de la inicialización de la base 
		  de datos  con las opciones <option>--auth</option> 
		  y <option>--pwfile</option> o <option>-W</option>
		  de <command>initdb</command>, por ejemplo:
		  <screen>
su - _postgresql
echo "MiClave" > clave.txt
initdb -Upostgres --auth=md5 --pwfile=clave.txt -D/var/postgresql/data
		  </screen>
		que inicializará PostgreSQL con autenticación md5 y clave
		de administrador <literal>MiClave</literal>
	  </para>  
	  <para>Otra posibilidad es cambiar la configuración después de haber
		  inicializado sin autenticación. Para esto cambie la clave del 
		  administrador con<footnote><para>Note que de esta forma 
				  puede cambiar la clave de otros usuarios 
				  de PostgreSQL.</para></footnote>:
		  <screen>
# psql -U postgres template1 
template1=# alter user postgres with password 'MiClave';
</screen>
Después edite <filename>/var/postgresql/data/pg_hba.conf</filename> 
y cambie en las lineas de acceso la palabra <literal>trusted</literal>
por <literal>md5</literal>, por ejemplo:
<screen>
local   all         all                               md5
host    all         all         127.0.0.1/32          md5
host    all         all         ::1/128               md5
</screen>
Detenga el servidor y vuelvalo a iniciar, notará que todo intento de
ingreso exige la clave. 
</para>
<para>
	El listado de bases de datos puede consultarse con:
	<screen>
SELECT * FROM pg_database ;
	</screen>
	y el listado de los usuarios con:
	<screen>
SELECT username FROM pg_users;
	</screen>
	Las claves de los diversos usuarios pueden cambiarse de
	forma análoga a la presentada para <literal>postgres</literal>:
	<screen>
ALTER ROLE &EUSUARIO; with UNENCRYPTED PASSWORD 'clave-plana';
	</screen>
</para>
<para>
 	Desde PostgreSQL 8.1 se emplea un esquema de roles que unifica
	los conceptos de usuario y grupo. 
	Además de exigir clave para cada ingreso, cada rol de 
	PostgreSQL que crea objetos puede modificar permisos para 
	restringir o dar acceso a otros roles.   
	Por ejemplo para restringir el acceso a una tabla 
	<literal>cuenta</literal>:
	<screen>
REVOKE ALL ON cuenta FROM PUBLIC;
	</screen>
	Cuando un rol crea una base de datos, queda como dueño de todas
	las tablas y en principio es el único que puede acceder a estas.
	Otro rol en principio no podrá ni siquiera examinar los datos
	de las tablas:
	<screen>
SELECT * FROM solicitud;
ERROR:  permission denied for relation solicitud
	</screen>
	Para dar permiso a otro rol puede usarse:
	<screen>
GRANT ALL on solicitud TO &EUSUARIO2;;
	</screen>
</para> 
  </sect2>
  <sect2 id="creacion-base">
    <title>Creación de una base de datos</title>

    <para>
	    Para crear la base de datos <literal>prueba</literal> puede
	    usar el superusuario con la opción
	    <option>-U postgres</option> o desde una cuenta que tenga 
	    permiso para crear bases de datos:
<screen>
	createdb prueba
	psql prueba
</screen>
      Desde la interfaz <command>psql</command>, pueden darse comandos
      SQL y otros específicos de PostgreSQL (ver <xref linkend="uso-base"/>).
      En particular el usuario <literal>postgres</literal> y desde
      cuentas con permiso para crear usuarios, puede crear
      otros usuarios (globales para todas las 
      bases de datos manejadas por el servidor).  Por ejemplo para
      crear un usuario normal sin clave, desde <literal>psql</literal>
      ingresar: <screen>
	CREATE USER usejemplo
      </screen>
      El comando <literal>CREATE USER</literal> presentado puede ir seguido 
      de <literal>CREATEUSER</literal> para
      crear un superusuario (sin restricción alguna), o
      <literal>CREATEDB</literal> para crear un usuario que pueda
      crear bases de datos o <literal>PASSWORD 'clave'</literal> para
      crear un usuario con una clave (emplea autenticación
      configurada).
      Desde la línea de comandos puede crearse un usuario con:<screen>
createuser usejemplo
      </screen>
    </para>
    <para>
      Para eliminar un usuario desde <command>psql</command> se usa:<screen>
DROP USER usejemplo;
      </screen>
      y para eliminarlo desde línea de comandos:
<screen>
dropuser usejemplo
      </screen>

    </para>
    <para>Puede ejecutarse un script SQL (<filename>crea.sql</filename>) 
	    desde la línea de comandos
      a un base de datos con<screen>
	psql -d test -U ejusuario --password -f crea.sql
      </screen>
  </para>
  </sect2>

  <sect2 id="uso-base">
    <title>Uso de una base de datos</title>
  
  <para>Puede emplear <command>psql</command>, la interfaz texto que
	acepta comandos SQL y que se distribuye con PostgreSQL. 
	Para esto, entre a una base (digamos <literal>b1908</literal>) 
        como un usuario (digamos <literal>u1908</literal>)
	con:
<screen>
psql -U u1908 -d b1908
</screen>
	En esta interfaz puede dar comandos SQL y algunos comandos internos
 	que puede listar con <command>\h</command>.
	Algunos ejemplos de operaciones útiles son:
      <variablelist>
	<varlistentry><term><literal>\dt</literal></term>
	  <listitem>
	    <para>para ver tablas disponibles.</para>
	  </listitem>
	</varlistentry>
	<varlistentry><term><literal>\d usuarios</literal></term>
	  <listitem><para>Describe la estructura de la tabla
	      <literal>usuarios</literal></para></listitem>
	</varlistentry>
	<varlistentry><term><literal>SELECT victim_nombre,victim_apellido FROM victimas WHERE victim_edad&lt;=12;</literal></term>
	  <listitem><para>Que muestre los nombres de niños de 12 años o menos listados en la tabla <literal>victimas</literal></para></listitem>
	</varlistentry>
	<varlistentry><term><literal>\h update</literal></term>
		<listitem><para>Da ayuda sobre el comando <literal>update</literal> 
				(que permite actualizar registros de 
				una tabla.) </para></listitem>
	</varlistentry>

      </variablelist>

      Es recomendable que los usuarios del sistema que también son
      usuarios de PostgreSQL creen el archivo
      <filename>~/.pgpass</filename> donde puede almacenarse la
      clave que usa en PostgreSQL ---de forma que las diversas
      herramientas no la solicitaran--- con una línea de la forma:
      <screen>
*:*:*:usuario:clave
      </screen>
</para>
  </sect2>

<sect2 id="postgresql-cotejacion">
	<title>Cotejación en PostgreSQL</title>
<para>
	Desde adJ 5.2 se incluye un porte de PostgreSQL (la
	versión incluida en adJ &VER-ADJ; es
	&p-postgresql-server;)
	que soporta cotejaciones de acuerdo al locale, y por defecto se crean 
	cotejaciones para todos los países de habla hispana, con
	nombres de la forma <literal>es_CO_UTF_8</literal>.
	Donde <literal>CO</literal> 
	representa Colombia, pero se pueden emplear otras abreviaturas
	de países como se usan en Internet (estándar ISO-3166-1):
	ES CO PE VE EC GT CU BO HN PY SV CR PA GQ MX AR CH DO NI UY PR.
</para>
<para>Puede examinar las cotejaciones disponibles ingresando al interprete 
	<literal>psql</literal> y ejecutando:
	<screen>
SELECT * FROM pg_collation;
	</screen>
</para>
<para>
	Puede crear una cotejación (digamos <literal>esp</literal>) para un locale 
	soportado por el sistema operativo y con la misma codificación
	de su base de datos (digamos 
	<literal>es_CO.ISO8859-1</literal>) con: 
	<screen>
CREATE COLLATION esp (LOCALE='es_CO.ISO8859-1');
	</screen>
</para>
<para>
	Una vez creada puede realizar operaciones empleándola por ejemplo:

	<screen>
SELECT '&Aacute;' &lt; 'B' COLLATE "esp";
...
SELECT nombre FROM clase ORDER BY nombre COLLATE "esp";
	</screen>
	la primera sentencia dará:
	<screen>
 ?column? 
 ----------
 t
 (1 row)
</screen>
</para>

<para>
	Puede crear columnas de tablas especificando el tipo de cotejación por 
	defecto para operaciones con esa columna.
	<screen>
CREATE TABLE ejc (
  nombre VARCHAR(100) COLLATE "esp"
);
</screen>
o cambiar las existentes:
<screen>
ALTER TABLE clase ALTER nombre TYPE VARCHAR(500) COLLATE "esp";
</screen>
También podrá renombrar cotejaciones que haya creado con
<literal>ALTER COLLATION esp RENAME TO es_CO_ISO8859_1;</literal>,
así como borrarlas
con <literal>DROP COLLATION esp;</literal>. Puede consultar
más en
<ulink url="http://www.postgresql.org/docs/9.1/static/collation.html"></ulink>.
</para>
</sect2>


  <sect2 id="respaldo-postgresql">
	  <title>Copias de respaldo</title>

	  <para>Para sacar una copia de respaldo de todas las 
		  base de datos manejadas con PostgreSQL (y suponiendo
		  que el socket está en <filename>/var/www/tmp</filename>):
		  ingrese a la cuenta del administrador:
		  <screen>
sudo su - _postgresql
pg_dumpall -U postgres -h /var/www/tmp/ \
      --inserts --attribute-inserts > /respaldos/pgdump.sql
		  </screen>

		  Puede restablecer una copia con
		  <screen>
psql -U postgres -h /var/www/tmp/ \
	-f /respaldos/pgdump.sql template1
</screen>
	</para>
  </sect2>
  <sect2 id="referencias-postgresql">
    <title>Referencias y lecturas recomendadas</title>

    <para> 
      <itemizedlist>
	<listitem>
	  <para>Documentación del paquete postgresql (README.OpenBSD, INSTALL).
	  </para>
	</listitem>
	<listitem>
	  <para>Documentación disponible en el paquete 
	    <literal>postgresql-doc</literal> (ver 
	    <citation>postgresql-doc</citation>) y en
	    <ulink url="http://www.postgresql.org/docs"/>.
	  </para>
	</listitem>
	<listitem>
	  <para>Páginas del manual de Unix:
	    <citerefentry><refentrytitle>psql</refentrytitle>
	      <manvolnum>1</manvolnum></citerefentry></para>
	</listitem>
      </itemizedlist>
    </para>
  </sect2>
</sect1>
